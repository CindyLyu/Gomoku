{"version":3,"sources":["GameBorder.jsx","GameContent.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GameBorder","className","GameContent","props","state","piece","turn","winner","history","Array","fill","this","positionX","positionY","x","push","y","i","k","obj","name","ide","display","player","setState","e","target","getAttribute","indentity","substr","indexOf","filter","item","firstNumber","substring","lastNumber","arr","history2","resultCheck","length","index","indices","j","decideResult","map","type","style","opacity","top","left","background","key","onClick","handleContentChange","bind","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a041ee13.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction GameBorder() {\n  return (\n    <div className=\"gomoku__gameboard\">\n      <span className=\"gomoku__gameboard-outer\" />\n      <span className=\"gomoku__gameboard-horizontal\" />\n      <span className=\"gomoku__gameboard-horizontal two\" />\n      <span className=\"gomoku__gameboard-horizontal three\" />\n      <span className=\"gomoku__gameboard-horizontal four\" />\n      <span className=\"gomoku__gameboard-horizontal five\" />\n      <span className=\"gomoku__gameboard-horizontal six\" />\n      <span className=\"gomoku__gameboard-horizontal seven\" />\n      <span className=\"gomoku__gameboard-horizontal eight\" />\n      <span className=\"gomoku__gameboard-horizontal nine\" />\n      <span className=\"gomoku__gameboard-vertical\" />\n      <span className=\"gomoku__gameboard-vertical v-two\" />\n      <span className=\"gomoku__gameboard-vertical v-three\" />\n      <span className=\"gomoku__gameboard-vertical v-four\" />\n      <span className=\"gomoku__gameboard-vertical v-five\" />\n      <span className=\"gomoku__gameboard-vertical v-six\" />\n      <span className=\"gomoku__gameboard-vertical v-seven\" />\n      <span className=\"gomoku__gameboard-vertical v-eigth\" />\n      <span className=\"gomoku__gameboard-vertical v-nine\" />\n      <span className=\"gomoku__gameboard-vertical center\" />\n    </div>\n  );\n}\n\n\nexport default GameBorder;\n","import React, { Component } from 'react';\n\n\nfunction decideResult(history, history2, player) {\n  let resultCheck = [];\n  for (let i = 0; i < history.length; i += 1) {\n    if (history[i] !== null && history[i].indexOf(player) !== -1) {\n      let index = history2[i].indexOf(player);\n      const indices = [];\n      while (index !== -1) { // 將陣列中含有該棋子的 index 儲存起來\n        indices.push(index);\n        index = history2[i].indexOf(player, index + 1);\n      }\n      resultCheck = [];\n      for (let e = 0; e < indices.length; e += 1) {\n        index = indices[e];\n        // 檢查垂直直線連線\n        for (let k = i; k < i + 5 && k < 20; k += 1) {\n          if (history[k] && history[k + 1]) {\n            if (history[k][index]) {\n              if (history[k][index] === history[k + 1][index]) {\n                resultCheck.push(true);\n              }\n            }\n          }\n        }\n        if (resultCheck.length !== 4) {\n          resultCheck = [];\n          // 檢查水平直線連線\n          for (let j = index; j < index + 5 && j < 20; j += 1) {\n            if (history[i][j]) {\n              if (history[i][j] === history[i][j + 1]) {\n                resultCheck.push(true);\n              }\n            }\n          }\n        }\n        if (resultCheck.length !== 4) {\n          resultCheck = [];\n          // 檢查左斜線（右下到左上檢查）\n          for (let k = i, j = index; k > i - 5 && k > 0 && j > index - 5 && j > 0; k -= 1, j -= 1) {\n            if (history[k] && history[k - 1]) {\n              if (history[k][j]) {\n                if (history[k][j] === history[k - 1][j - 1]) {\n                  resultCheck.push(true);\n                }\n              }\n            }\n          }\n        }\n        if (resultCheck.length !== 4) {\n          resultCheck = [];\n          // 檢查右斜線（左下到右上檢查）\n          for (let k = i,\n            j = index; k > i - 5 && k < 20 && j < index + 5 && j < 20; k -= 1, j += 1) {\n            if (history[k] && history[k - 1]) {\n              if (history[k][j]) {\n                if (history[k][j] === history[k - 1][j + 1]) {\n                  resultCheck.push(true);\n                }\n              }\n            }\n          }\n        }\n        if (resultCheck.length === 4) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nclass GameContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      piece: [],\n      turn: true, // true 為輪到白子；false 輪到黑子\n      winner: null,\n      history: Array(19).fill(null),\n    };\n  }\n\n  componentDidMount() {\n    const { piece } = this.state;\n    const positionX = [];\n    const positionY = [];\n    for (let x = -9; x <= 351; x += 20) { // 計算 X 座標位置\n      positionX.push(x);\n    }\n    for (let y = -375; y <= -15; y += 20) { // 計算 Y 座標位置\n      positionY.push(y);\n    }\n    for (let i = 1; i <= 19; i += 1) {\n      for (let k = 1; k <= 19; k += 1) {\n        const obj = {\n          name: `gomoku__content-piece-L${k}-${i}`, x: positionX[i - 1], y: positionY[k - 1], ide: `L${k}${i}`, display: false, player: 'none',\n        };\n        piece.push(obj);\n        this.setState({\n          piece,\n        });\n      }\n    }\n  }\n\n  handleContentChange(e) {\n    const {\n      turn, piece, winner, history,\n    } = this.state;\n    const black = '#666666';\n    const player = turn ? 'white' : black;\n    const className = e.target.getAttribute('class');\n    const indentity = className.substr([className.indexOf('L') + 1]);\n    const target = piece.filter(item => item.name === className);\n    target[0].display = true; // 顯示該棋子\n\n    if (winner === null && target[0].player === 'none') { // 尚未分出勝負且該位置無任何棋子時\n      target[0].player = player;\n      const firstNumber = indentity.substring(indentity, indentity.indexOf('-'));\n      const lastNumber = indentity.substr([indentity.indexOf('-') + 1]);\n\n      if (history[firstNumber - 1] === null) { // 是否有已存在的陣列\n        const arr = Array(19).fill(null);\n        arr[lastNumber - 1] = player;\n        history[firstNumber - 1] = arr;\n      } else {\n        const arr = history[firstNumber - 1];\n        arr[lastNumber - 1] = player;\n        history[firstNumber - 1] = arr;\n      }\n\n      this.setState({\n        piece,\n        turn: !turn,\n        history,\n      });\n\n      const result = decideResult(history, history, player);\n      if (result) {\n        this.setState({\n          winner: player,\n        });\n      }\n    }\n  }\n\n  render() {\n    const { piece, winner, turn } = this.state;\n    return (\n      <div className=\"gomoku__content\">\n        {\n          piece.map(item => (\n            <button\n              type=\"button\"\n              className={item.name}\n              style={{\n                opacity: item.display ? '1' : '0', top: item.y, left: item.x, background: item.player,\n              }}\n              key={item.name}\n              onClick={this.handleContentChange.bind(this)}\n            />\n          ))\n        }\n        {\n          winner ? (\n            <div className=\"gomoku__content-result\">\n              <b>\n              Winner：\n                {winner === 'white' ? '白子' : '黑子'}\n              </b>\n              <div className=\"gomoku__content-tips\">重新載入頁面即可開始新棋局</div>\n            </div>\n          ) : (\n            <div className=\"gomoku__content-turn\">\n            輪到「\n              <b>{turn ? '白子' : '黑子'}</b>\n            」下棋\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default GameContent;\n","import React from 'react';\nimport './index.sass';\nimport GameBorder from './GameBorder.jsx';\nimport GameContent from './GameContent.jsx';\n\n\nfunction App() {\n  return (\n    <main className=\"gomoku\">\n      <header className=\"gomoku__title\">\n        五子棋\n        <i className=\"fas fa-circle\" />\n        <span><i className=\"gomoku__title-circle\" /></span>\n      </header>\n      <GameBorder />\n      <GameContent />\n    </main>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}